#pragma once
#include "Actor.h"
#include "SoundEventClip.h"
#include "BasicInputAction.h"
#include "AudioSystem.h"
#include "AudioComponent.h"
#include "FPSCamera.h"
#include "MeshRenderer.h"
#include "BallActor.h"
#include "BoxCollider.h"
#include "PlaneActor.h"

//一人称視点のプレイヤー操作クラス
//現在ゲーム内の移動に使用しています。
class FPSActor : public ActorObject
{
private:
	//入力クラス
	class BasicInputAction*	mBasicInput;
	//プレイヤー用のサウンド
	class AudioComponent*	mAudioComp;
	//Mesh
	class MeshRenderer*		mMeshComp;
	//一人称カメラ
	class FPSCamera*		mFPSCamera;
	//コライダー
	class BoxCollider*		mBoxCollider;
	//足音SE
	SoundEventClip			mFootstep;
	//足音の間隔
	float					mLastFootstep;
	//足音のイベントを呼び出すコールバック変数
	Event<void()>			mEvent;
	//簡易的な最大HPの変数
	float					mMaxHP;
	//簡易的なHPの変数
	float					mHP;
public:
							FPSActor();

	void					FixedUpdateActor(float deltaTime)override;

	void					UpdateActor(float deltaTime) override;
	
	void					ActorInput(const struct InputState& keys) override;

	void					SetFootstepSurface(float value);

	void					SetVisible(bool visible);

	void					OnCollisionEnter(class ActorObject* target) override;

	void					OnCollisionExit(class ActorObject* target) override;
};